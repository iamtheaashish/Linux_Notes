< What is Flatpak ?>
It is a software packaging and distribution system for Linux, 
it is totally different from the traditional package management systems like APT, YUM, DNF, etc.
1. Universal app format: Flatpak allows developers to package their applications in a way that makes them compatible with any Linux distribution.
2. Sandboxing: Flatpak applications run in a sandboxed environment, which means they are isolated from the rest of the system to enhance security.
3. Uses OSTree: Flatpak uses OSTree to manage application versions and updates, allowing for atomic updates and rollbacks.
# Flatpak is fully open-source and is supported by a wide range of Linux distributions.
# It is not replacing traditional package managers but rather complementing them by providing a way to 
# distribute desktop applications in a more consistent and secure manner.

# You can use, modify and distribute Flatpak freely under the terms of the GNU General Public License (GPL) version 2 or later.
# Red Hat engineers, Gnome developers and other contributors created Flatpak.

< Why does it exist when we already have package managers like APT, YUM, DNF, etc. ? > 
+ RPM/YUM/DNF/APT
1. Target scope ---> System Level Packages
2. Compatibility ---> Distribution Specific
3. Updates ---> Controlled by distribution repos. (often slower)
4. Sandboxing ---> Limited (depends on the package)
5. Dependencies ---> App must match system libraries
6. Installation Location ---> System-wide (requires root access)

+ Flatpak
1. Target scope ---> Mostly Desktop Applications
2. Compatibility ---> Distribution Agnostic (works across various distros)
3. Updates ---> Direct from app developers (often faster)
4. Sandboxing ---> Strong (isolated from system), Built in via Bubblewrap
5. Dependencies ---> Bundled with the app (ensures compatibility)
6. Installation Location ---> User-level (does not require root access)

Pros of using Flatpak:
> Cross Distribution Compatibility
> Latest App Versions
> Enhanced Security
> User-level Installation
> Simplified Dependency Management

Cons of using Flatpak:
> Increased Disk Usage
> Performance Overhead
> Limited System Integration
> Learning Curve
> Not Ideal for All Software

+ Still Use Traditional Package Managers When:
1. You need system-level packages or libraries.
2. You want to minimize disk usage.
3. You prefer tighter integration with your Linux distribution.
4. You are managing a server or a minimal installation without a graphical interface.
5. You want to avoid the performance overhead associated with sandboxing.
6. You are using software that is not available as a Flatpak.

< Architecture of Flatpak >
It doesn't run like a daemon or service, it is a set of command line tools and libraries that interact with the system.
Most Flatpak commands are executed on demand via the Flatpak CLI tool(/usr/bin/flatpak).
1. Flatpak CLI: The command-line interface for managing Flatpak applications and runtimes.
2. OSTree: A version control system for managing the filesystem trees of applications and runtimes. (/var/lib/flatpak) ()
3. Bubblewrap: A sandboxing tool that creates isolated environments for Flatpak applications.
4. Repositories: Flatpak applications and runtimes are stored in remote repositories, which can be accessed and managed via the Flatpak CLI.
5. Runtimes: Shared libraries and dependencies that applications can use, reducing duplication and saving disk space.
6. Applications: The actual software packages that users install and run via Flatpak.
==============================
< Basic Flatpak Commands >
Install Flatpak (if not already installed):
   - On Debian/Ubuntu: `sudo apt install flatpak`
   - On Fedora: `sudo dnf install flatpak`
   - On Arch Linux: `sudo pacman -S flatpak`
$ flatpak --version
$ flatpak help
$ flatpak list # List installed Flatpak applications and runtimes
$ flatpak search <application_name> # Search for applications in remote repositories
$ flatpak install <repository> <application_name> # Install an application from a repository
$ flatpak uninstall <application_name> # Uninstall an application
$ flatpak update # Update all installed Flatpak applications and runtimes
$ flatpak info <application_name> # Get information about a specific application
$ flatpak run <application_name> # Run a Flatpak application
$ flatpak remote-add --if-not-exists <repository_name> <repository_url> # Add a remote repository
$ flatpak remote-list # List configured remote repositories
$ flatpak uninstall --unused # Remove unused runtimes and dependencies
$ flatpak repair # Check and repair Flatpak installations
$ flatpak override --user --filesystem=home <application_name> # Grant an application access to the home directory
$ flatpak override --user --env=VAR_NAME=value <application_name> # Set environment variables for an application
$ flatpak run --command=bash <application_name> # Open a bash shell inside the application's sandbox
==============================
< Common Flatpak Repositories >
1. Flathub: The most popular and widely used Flatpak repository, hosting a large number of applications.
   - Repository URL: https://flathub.org/repo/flathub
   - Add Flathub: `flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo`
2. GNOME Nightly: A repository for GNOME applications and libraries.
   - Repository URL: https://sdk.gnome.org/gnome-nightly.flatpakrepo
   - Add GNOME Nightly: `flatpak remote-add --if-not-exists gnome-nightly https://sdk.gnome.org/gnome-nightly.flatpakrepo`
3. KDE Flatpak: A repository for KDE applications and libraries.
   - Repository URL: https://distribute.kde.org/kdeapps.flatpakrepo
   - Add KDE Flatpak: `flatpak remote-add --if-not-exists kde https://distribute.kde.org/kdeapps.flatpakrepo`
4. Elementary OS: A repository for applications developed for the Elementary OS.
   - Repository URL: https://flatpak.elementary.io/repo/elementary.flatpakrepo
   - Add Elementary OS: `flatpak remote-add --if-not-exists elementary https://flatpak.elementary.io/repo/elementary.flatpakrepo`
5. Other Repositories: Various other repositories exist for specific applications or communities. Always ensure the repository is trustworthy before adding it.

` flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo` # Add Flathub for the current user only
` flatpak remote-delete <repository_name>` # Remove a remote repository
` flatpak --user remote-delete <repository_name>` # Remove a remote repository for the current user only
==============================
< Managing Flatpak Applications >
1. Installing Applications:
   - To search an application from a repository, use the command:
        ` flatpak search <application_name> `
   - To install an application from a repository, use the command:
        ` flatpak install <repository> <application_id> `
   - To uninstall an application, use the command:
        ` flatpak uninstall <application_id> `
==============================
`flatpak --default-system=true` # Use system-wide installation (requires root access)
`flatpak --default-user=true` # Use user-level installation (default behavior)
==============================
2. Running Applications:
   - To run a Flatpak application, use the command:
        ` flatpak run <application_id> `
   - You can also run an application with specific options, such as opening a terminal inside the sandbox:
        ` flatpak run --command=bash <application_id> `
==============================
3. Updating Applications:
   - To update all installed Flatpak applications and runtimes, use the command:
        ` flatpak update `
   - To update a specific application, use the command:
        ` flatpak update <application_id> `
==============================


